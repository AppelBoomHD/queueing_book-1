#+title: Queueing Theory: simulations
#+SUBTITLE: EBB074A05
#+author: Nicky D. van Foreest
#+date: 2020:11:15

#+STARTUP: indent
#+STARTUP: overview 
#+OPTIONS:  toc:nil

#+include: preamble.org

#+PROPERTY: header-args  :session 

* General info

The idea is to show you how I build up programs in python from scratch to simulate queueing systems.
On purpose I do not use the most nifty coding or python tricks, but I try to stick to simple ideas.
You should know that the general ideas are more important than code syntax.
About using python, I like it, but you can use any other language you like for your own simulations. 


Here are two options to run python code in the browser so that you don't have to install python locally (i.e., on your computer):
- [[https://diggyhq.com/][diggy]]
- [[https://colab.research.google.com/notebooks/intro.ipynb][colab]]
I prefer to work within emacs (an editor), and run the code in a terminal. This works much faster and more conveniently, but requires a bit (but not much) of intellectual effort and investment in how to configure things on your computer. If you're interested in the power tools  I use, check out my [[https://ndvanforeest.github.io/tools/][tools page]]. 

If you copy paste the code below into a jupyter notebook, the code should run more or less as is. 

All youtube movies can be found at the channel https://www.youtube.com/playlist?list=PL1CE-7HB8brWuLRhET3zskh1YXWKiUIY_.
Below I include the links to each of the videos organized per section.


For further explanations you should consult my queueing book: https://github.com/ndvanforeest/queueing_book

* Simulation in Discrete time

Here I show how to set up  environment in python to simulate queueing systems in discrete time. 
- https://youtu.be/DfYxayoQmjYc
- https://youtu.be/D8BIAoBICnw
- https://youtu.be/_BoagRyH5c0
- ~queues-simulations-in-discrete-time.pdf~ contains the code and the results.
- ~queues-simulations-in-discrete-time.org~ is the org-mode source.
  

* Empirical distribution functions
I discuss some inefficient and efficient code to compute  an empirical cumulative distribution function (ECDF) of a given set $x$ of measurements. I also include some =matplotlib= functions on how to plot the ECDF.
- https://youtu.be/aKfv908uWqM
- ~empirical-distributions.pdf~ contains the code and the plots.
- ~empirical-distributions.org~ is the source
  

* Psychiatrists doing intakes

There are 5 psychiatrists doing intakes.
In their current organization, the queue of patients waiting for intakes is way too long, much longer then they like to see.
Here I consider some strategies to deal with this controlling the queue length process, and I use simulation to evaluate how successful these are.

- https://youtu.be/bCU3oP6r-00
- ~psychiatrists.pdf~ for code and plots
- ~psychiatrists.org~:source



* Queues in continuous time

I discuss two elegant algorithms to simulate the waiting time process. One is for a system with one server, and jobs are served in the order in which they arrive. The second is for a multi-server FIFO queue.

- Youtube: https://youtu.be/h1OTvdLs9ik
- ~queues-simulations-continuous-time.org~
- ~queues-simulations-continuous-time.pdf~


* Supermarket planning, Multi-server queue with dynamically changing arrival rates

Here I apply the code to simulate a supermarkets.
A supermarket can be modeled as a multi-serve queueing system with dynamically changing load.
Because of this the analytical analysis is hard, but with simulation we can get the job done with ease.
The task is to make a plan to determine the number of cashiers we need to prevent the queue from exploding.

- Youtube: https://studio.youtube.com/video/nV4MwjMe3vQ/edit
- ~multiserver-queue-dynamic-arrival-rates.org~
- ~multiserver-queue-dynamic-arrival-rates.pdf~
  

* TODO Simulations with event stacks

* TODO Check-in at an airport

* TODO Sakasegawa's formula

** Special cases

*** MM1

*** MMc
Check the quality

*** MG1

* TODO Server interuptions

** Batching and setups

** non-preemptive outages: adjustments

** pre-emptive outages: failures

* TODO MG1, Finite waiting room,  Recursions for queue length distribution

* TODO MM1 with setup cost under N policy

* TODO MG1 with setup cost under N policy
